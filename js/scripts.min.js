"use strict";

// Configuração principal
var sl = {
    siglaCopy: "nmd01",
    checkout1: "https://pay.kiwify.com.br/VSma5rj?split=3",
    checkout2: "",
    copyVideoVersion: "",
    displayBell: true,
    formCaptacaoNC: {
        xpromoDefault: "XE-MELH-WE-NMD01-X-X-LP-X-X-X-X",
        hotlist: "EHL_NMD01",
        welcome: "emp_welcome_ehlnmd01"
    },
    sectionContato: true,
    sectionGarantia: true,
    sectionmdmedia: true,
    footer: {
        displayCtaFooter: true,
        razaoSocialParceiro: "Special Squad Traders S.A."
    },
    redirect: {
        habilitar: false,
        dataHabilitar: "Jul 18, 2023 16:59:00",
        urlRedirect: "https://www.empiiiiricus.com.br/assinaturas/",
        desabilitar: false,
        dataDesabilitar: "Jul 18, 2023 16:59:15"
    }
};

// Desestruturação das variáveis
var siglaCopy = sl.siglaCopy
    , checkout1 = sl.checkout1
    , checkout2 = sl.checkout2
    , copyVideoVersion = sl.copyVideoVersion
    , linkRegulamento = sl.linkRegulamento
    , displayBell = sl.displayBell
    , formCaptacaoNC = sl.formCaptacaoNC
    , sectionContato = sl.sectionContato
    , sectionGarantia = sl.sectionGarantia
    , sectionmdmedia = sl.sectionmdmedia
    , footer = sl.footer
    , redirect = sl.redirect
    , xpromoDefault = formCaptacaoNC.xpromoDefault
    , hotlist = formCaptacaoNC.hotlist
    , welcome = formCaptacaoNC.welcome
    , dashboardDTL = formCaptacaoNC.dashboardDTL
    , displayCtaFooter = footer.displayCtaFooter
    , razaoSocialParceiro = footer.razaoSocialParceiro;

"use strict";

// Redirecionamento
var currentDate, redirectTime, handleRedirect;
redirect.habilitar && (redirectTime = new Date(redirect.dataHabilitar).getTime(),
    handleRedirect = setInterval(function () {
        currentDate = (new Date).getTime();
        redirectTime < currentDate && (redirect.desabilitar && new Date(redirect.dataDesabilitar).getTime() < currentDate || (redirect.habilitar = false,
            window.location.href = redirect.urlRedirect + window.location.search),
            clearInterval(handleRedirect));
    }, 1000));

// Ajuste dos links de checkout com parâmetros da URL
var pegarParametrosURL = window.location.search
    , linksCheckout = document.querySelectorAll("a[data-tipolink]");

function ajustarCK(t) {
    return t.indexOf("?") != -1 ? (pegarParametrosURL === "" ? t : t + "&" + pegarParametrosURL.substring(1)) : t + pegarParametrosURL;
}

linksCheckout.forEach(function (t) {
    if (t.getAttribute("data-tipolink") == "linkCheckout1" && checkout1 !== "") {
        t.setAttribute("href", ajustarCK(checkout1));
        t.style.display = "inline-block";
    }
    if (t.getAttribute("data-tipolink") == "linkCheckout2" && checkout2 !== "") {
        t.setAttribute("href", ajustarCK(checkout2));
        t.style.display = "inline-block";
    }
});

// Capturar todos os botões com data-tipolink="linkCheckout1"
var botoesCheckout = document.querySelectorAll('a[data-tipolink="linkCheckout1"]');

// Iterar por cada botão e adicionar o evento de clique para abrir o modal
botoesCheckout.forEach(function (botao) {
    botao.addEventListener("click", function (event) {
        event.preventDefault();
        // Evita o redirecionamento imediato
        var modal = document.getElementById("popupForm");
        // Captura o modal
        if (modal) {
            modal.style.display = "block";
            // Mostra o modal
        } else {
            console.error("Modal não encontrado.");
        }
    });
});

// Capturar os dados do formulário, enviar para n8n e redirecionar ao checkout
document.getElementById("formLead").addEventListener("submit", async function (event) {
    event.preventDefault();
    // Evita o envio padrão do formulário

    // Pegar os dados do lead
    var name = document.getElementById("name").value;
    var email = document.getElementById("email").value;
    var phone = document.getElementById("phone").value;

    try {
        // Enviar os dados para o n8n via POST
        const response = await fetch("https://api.onmdmedia.com/webhook/3b542722-0c78-430c-b774-c8125831dbc8", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                name: name,
                email: email,
                phone: phone,
            }),
        });

        const data = await response.json();
        console.log("Dados enviados para n8n:", data);

        // Adicionar os dados na URL do checkout
        var checkoutComDados = checkout1 + "&name=" + encodeURIComponent(name) + "&email=" + encodeURIComponent(email) + "&phone=" + encodeURIComponent(phone) + pegarParametrosURL;

        // Redirecionar para o checkout com os parâmetros
        window.location.href = checkoutComDados;
    } catch (error) {
        console.error("Erro ao enviar os dados:", error);
    }
});

// Função para fechar o modal
function closeModalFunc() {
    var modal = document.getElementById("popupForm");
    modal.style.display = "none";
    // Esconde o modal
}

// Adicionar evento de clique ao botão "X" para fechar o modal
var closeModal = document.querySelector(".close");
// Seleciona o botão "X"
if (closeModal) {
    closeModal.addEventListener("click", function () {
        closeModalFunc();
        // Chama a função para fechar o modal
    });
}

// Fecha o modal se o usuário clicar fora da área do modal
window.addEventListener("click", function (event) {
    var modal = document.getElementById("popupForm");
    if (event.target === modal) {
        closeModalFunc();
    }
});

"use strict";

// Exibição das seções
sectionContato && (document.querySelector(".contato").style.display = "block");
sectionGarantia && (document.querySelector(".garantia").style.display = "block");
sectionmdmedia && (document.querySelector(".mdmedia").style.display = "block");

"use strict";

// Comportamento do accordion no rodapé
var linksAccordion = document.querySelectorAll(".footer_accordion-toggle");

linksAccordion.forEach(function (o) {
    o.addEventListener("click", function () {
        o.querySelector("button").classList.toggle("footer_accordion-iconMore");
        o.querySelector("button").classList.toggle("footer_accordion-iconLess");
        o.classList.toggle("footer_accordion-toggle-bgActive");
        o.nextElementSibling.classList.toggle("footer_accordion-visible");
    });
});

"use strict";

// Atualização da razão social no rodapé
razaoSocialParceiro && (document.querySelector("div[data-important]").style.display = "block",
    document.querySelector("span[data-rsParceiro]").textContent = razaoSocialParceiro);

"use strict";

// Atualização do ano no rodapé
var date = new Date()
    , anoFooter = document.querySelector(".footer_copyright span");

anoFooter.innerHTML = date.getFullYear();

"use strict";

// Comportamento do CTA no rodapé
var verifyCtaFooter, viewportCtaFooter, activateCtaFooter, wrapperCtaFooter, footerCopyright;

if (displayCtaFooter) {
    verifyCtaFooter = function () {
        if (activateCtaFooter.getBoundingClientRect().bottom <= 0.8 * window.innerHeight) {
            wrapperCtaFooter.style.bottom = "0";
        } else {
            wrapperCtaFooter.style.bottom = "-100px";
        }
        var t = document.querySelector(".footer_ctaButton");
        if (checkout1 !== "" && checkout2 !== "") {
            t.removeAttribute("href");
            scrollTo(".footer_ctaButton", "#oferta", 35);
        }
    }
        ;
    viewportCtaFooter = window;
    activateCtaFooter = document.querySelector("#activateCtaFooter");
    wrapperCtaFooter = document.querySelector(".footer_ctaButtonWrapper");
    viewportCtaFooter.addEventListener("load", verifyCtaFooter);
    viewportCtaFooter.addEventListener("scroll", verifyCtaFooter);
} else {
    footerCopyright = document.querySelector(".footer_copyright");
    footerCopyright.style.paddingBottom = "20px";
}

"use strict";
function _typeof(t) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
        return typeof t
    }
        : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
    )(t)
}
function _regeneratorRuntime() {
    _regeneratorRuntime = function () {
        return a
    }
        ;
    var u, a = {}, t = Object.prototype, s = t.hasOwnProperty, l = Object.defineProperty || function (t, e, r) {
        t[e] = r.value
    }
        , e = "function" == typeof Symbol ? Symbol : {}, n = e.iterator || "@@iterator", r = e.asyncIterator || "@@asyncIterator", o = e.toStringTag || "@@toStringTag";

    function i(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }),
            t[e]
    }
    try {
        i({}, "")
    } catch (u) {
        i = function (t, e, r) {
            return t[e] = r
        }
    }
    function c(t, e, r, n) {
        var o, i, a, c, e = e && e.prototype instanceof v ? e : v, e = Object.create(e.prototype), n = new P(n || []);
        return l(e, "_invoke", {
            value: (o = t,
                i = r,
                a = n,
                c = h,
                function (t, e) {
                    if (c === y)
                        throw new Error("Generator is already running");
                    if (c === d) {
                        if ("throw" === t)
                            throw e;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (a.method = t,
                        a.arg = e; ;) {
                        var r = a.delegate;
                        if (r) {
                            r = function t(e, r) {
                                var n = r.method
                                    , o = e.iterator[n];
                                if (o === u)
                                    return r.delegate = null,
                                        "throw" === n && e.iterator.return && (r.method = "return",
                                            r.arg = u,
                                            t(e, r),
                                            "throw" === r.method) || "return" !== n && (r.method = "throw",
                                                r.arg = new TypeError("The iterator does not provide a '" + n + "' method")),
                                        m;
                                n = f(o, e.iterator, r.arg);
                                if ("throw" === n.type)
                                    return r.method = "throw",
                                        r.arg = n.arg,
                                        r.delegate = null,
                                        m;
                                o = n.arg;
                                return o ? o.done ? (r[e.resultName] = o.value,
                                    r.next = e.nextLoc,
                                    "return" !== r.method && (r.method = "next",
                                        r.arg = u),
                                    r.delegate = null,
                                    m) : o : (r.method = "throw",
                                        r.arg = new TypeError("iterator result is not an object"),
                                        r.delegate = null,
                                        m)
                            }(r, a);
                            if (r) {
                                if (r === m)
                                    continue;
                                return r
                            }
                        }
                        if ("next" === a.method)
                            a.sent = a._sent = a.arg;
                        else if ("throw" === a.method) {
                            if (c === h)
                                throw c = d,
                                a.arg;
                            a.dispatchException(a.arg)
                        } else
                            "return" === a.method && a.abrupt("return", a.arg);
                        c = y;
                        r = f(o, i, a);
                        if ("normal" === r.type) {
                            if (c = a.done ? d : p,
                                r.arg === m)
                                continue;
                            return {
                                value: r.arg,
                                done: a.done
                            }
                        }
                        "throw" === r.type && (c = d,
                            a.method = "throw",
                            a.arg = r.arg)
                    }
                }
            )
        }),
            e
    }
    function f(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            }
        } catch (t) {
            return {
                type: "throw",
                arg: t
            }
        }
    }
    a.wrap = c;
    var h = "suspendedStart"
        , p = "suspendedYield"
        , y = "executing"
        , d = "completed"
        , m = {};
    function v() { }
    function g() { }
    function w() { }
    var e = {}
        , b = (i(e, n, function () {
            return this
        }),
            Object.getPrototypeOf)
        , b = b && b(b(I([])))
        , x = (b && b !== t && s.call(b, n) && (e = b),
            w.prototype = v.prototype = Object.create(e));
    function E(t) {
        ["next", "throw", "return"].forEach(function (e) {
            i(t, e, function (t) {
                return this._invoke(e, t)
            })
        })
    }
    function _(a, c) {
        var e;
        l(this, "_invoke", {
            value: function (r, n) {
                function t() {
                    return new c(function (t, e) {
                        !function e(t, r, n, o) {
                            var i, t = f(a[t], a, r);
                            if ("throw" !== t.type)
                                return (r = (i = t.arg).value) && "object" == _typeof(r) && s.call(r, "__await") ? c.resolve(r.__await).then(function (t) {
                                    e("next", t, n, o)
                                }, function (t) {
                                    e("throw", t, n, o)
                                }) : c.resolve(r).then(function (t) {
                                    i.value = t,
                                        n(i)
                                }, function (t) {
                                    return e("throw", t, n, o)
                                });
                            o(t.arg)
                        }(r, n, t, e)
                    }
                    )
                }
                return e = e ? e.then(t, t) : t()
            }
        })
    }
    function L(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]),
            2 in t && (e.finallyLoc = t[2],
                e.afterLoc = t[3]),
            this.tryEntries.push(e)
    }
    function k(t) {
        var e = t.completion || {};
        e.type = "normal",
            delete e.arg,
            t.completion = e
    }
    function P(t) {
        this.tryEntries = [{
            tryLoc: "root"
        }],
            t.forEach(L, this),
            this.reset(!0)
    }
    function I(e) {
        if (e || "" === e) {
            var r, t = e[n];
            if (t)
                return t.call(e);
            if ("function" == typeof e.next)
                return e;
            if (!isNaN(e.length))
                return r = -1,
                    (t = function t() {
                        for (; ++r < e.length;)
                            if (s.call(e, r))
                                return t.value = e[r],
                                    t.done = !1,
                                    t;
                        return t.value = u,
                            t.done = !0,
                            t
                    }
                    ).next = t
        }
        throw new TypeError(_typeof(e) + " is not iterable")
    }
    return l(x, "constructor", {
        value: g.prototype = w,
        configurable: !0
    }),
        l(w, "constructor", {
            value: g,
            configurable: !0
        }),
        g.displayName = i(w, o, "GeneratorFunction"),
        a.isGeneratorFunction = function (t) {
            t = "function" == typeof t && t.constructor;
            return !!t && (t === g || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        a.mark = function (t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w,
                i(t, o, "GeneratorFunction")),
                t.prototype = Object.create(x),
                t
        }
        ,
        a.awrap = function (t) {
            return {
                __await: t
            }
        }
        ,
        E(_.prototype),
        i(_.prototype, r, function () {
            return this
        }),
        a.AsyncIterator = _,
        a.async = function (t, e, r, n, o) {
            void 0 === o && (o = Promise);
            var i = new _(c(t, e, r, n), o);
            return a.isGeneratorFunction(e) ? i : i.next().then(function (t) {
                return t.done ? t.value : i.next()
            })
        }
        ,
        E(x),
        i(x, o, "Generator"),
        i(x, n, function () {
            return this
        }),
        i(x, "toString", function () {
            return "[object Generator]"
        }),
        a.keys = function (t) {
            var e, r = Object(t), n = [];
            for (e in r)
                n.push(e);
            return n.reverse(),
                function t() {
                    for (; n.length;) {
                        var e = n.pop();
                        if (e in r)
                            return t.value = e,
                                t.done = !1,
                                t
                    }
                    return t.done = !0,
                        t
                }
        }
        ,
        a.values = I,
        P.prototype = {
            constructor: P,
            reset: function (t) {
                if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = u,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = u,
                    this.tryEntries.forEach(k),
                    !t)
                    for (var e in this)
                        "t" === e.charAt(0) && s.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = u)
            },
            stop: function () {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type)
                    throw t.arg;
                return this.rval
            },
            dispatchException: function (r) {
                if (this.done)
                    throw r;
                var n = this;
                function t(t, e) {
                    return i.type = "throw",
                        i.arg = r,
                        n.next = t,
                        e && (n.method = "next",
                            n.arg = u),
                        !!e
                }
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var o = this.tryEntries[e]
                        , i = o.completion;
                    if ("root" === o.tryLoc)
                        return t("end");
                    if (o.tryLoc <= this.prev) {
                        var a = s.call(o, "catchLoc")
                            , c = s.call(o, "finallyLoc");
                        if (a && c) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0);
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        } else if (a) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function (t, e) {
                for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
                    var n = this.tryEntries[r];
                    if (n.tryLoc <= this.prev && s.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var o = n;
                        break
                    }
                }
                var i = (o = o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc ? null : o) ? o.completion : {};
                return i.type = t,
                    i.arg = e,
                    o ? (this.method = "next",
                        this.next = o.finallyLoc,
                        m) : this.complete(i)
            },
            complete: function (t, e) {
                if ("throw" === t.type)
                    throw t.arg;
                return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === t.type && e && (this.next = e),
                    m
            },
            finish: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r = this.tryEntries[e];
                    if (r.finallyLoc === t)
                        return this.complete(r.completion, r.afterLoc),
                            k(r),
                            m
                }
            },
            catch: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r, n, o = this.tryEntries[e];
                    if (o.tryLoc === t)
                        return "throw" === (r = o.completion).type && (n = r.arg,
                            k(o)),
                            n
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function (t, e, r) {
                return this.delegate = {
                    iterator: I(t),
                    resultName: e,
                    nextLoc: r
                },
                    "next" === this.method && (this.arg = u),
                    m
            }
        },
        a
}
function asyncGeneratorStep(t, e, r, n, o, i, a) {
    try {
        var c = t[i](a)
            , u = c.value
    } catch (t) {
        return void r(t)
    }
    c.done ? e(u) : Promise.resolve(u).then(n, o)
}
function _asyncToGenerator(c) {
    return function () {
        var t = this
            , a = arguments;
        return new Promise(function (e, r) {
            var n = c.apply(t, a);
            function o(t) {
                asyncGeneratorStep(n, e, r, o, i, "next", t)
            }
            function i(t) {
                asyncGeneratorStep(n, e, r, o, i, "throw", t)
            }
            o(void 0)
        }
        )
    }
}
var alreadyFilled = !!searchCookie("alreadyFilled-" + siglaCopy)
    , urlParams = new URLSearchParams(window.location.search)
    , parameterEmail = urlParams.get("e") || urlParams.get("email") || urlParams.get("kke")
    , responseUserIdentifier = "não terminou o await";
function userIdentifier() {
    return _userIdentifier.apply(this, arguments)
}
function _userIdentifier() {
    return (_userIdentifier = _asyncToGenerator(_regeneratorRuntime().mark(function t() {
        var e, r;
        return _regeneratorRuntime().wrap(function (t) {
            for (; ;)
                switch (t.prev = t.next) {
                    case 0:
                        if (!parameterEmail) {
                            t.next = 7;
                            break
                        }
                        urlParams.delete("e"),
                            urlParams.delete("email"),
                            urlParams.delete("kke"),
                            responseUserIdentifier = window.atob(parameterEmail),
                            t.next = 36;
                        break;
                    case 7:
                        if (e = searchCookie("COOKIE_EMP_U"))
                            return t.next = 11,
                                fetch("https://www.usuario.empiiiiricus.com.br/tracking/hash/find?hash=".concat(e), {
                                    method: "GET"
                                });
                        t.next = 35;
                        break;
                    case 11:
                        if (200 == (e = t.sent).status || 201 == e.status)
                            return t.next = 15,
                                e.json();
                        t.next = 32;
                        break;
                    case 15:
                        return r = t.sent,
                            t.next = 18,
                            r.email;
                    case 18:
                        if (responseUserIdentifier = t.sent,
                            responseUserIdentifier)
                            return inputEmail.value = responseUserIdentifier,
                                t.next = 24,
                                checkEmailAddress();
                        t.next = 28;
                        break;
                    case 24:
                        if (!t.sent) {
                            t.next = 26;
                            break
                        }
                        blockEmail();
                    case 26:
                        t.next = 30;
                        break;
                    case 28:
                        inputEmail.value = "";
                    case 30:
                        t.next = 33;
                        break;
                    case 32:
                        responseUserIdentifier = !1;
                    case 33:
                        t.next = 36;
                        break;
                    case 35:
                        responseUserIdentifier = !1;
                    case 36:
                    case "end":
                        return t.stop()
                }
        }, t)
    }))).apply(this, arguments)
}
userIdentifier();

"use strict";
var body = document.querySelector("body")
    , modal = document.querySelector(".modal")
    , modalContent = document.querySelector(".modal_content");
function openModal() {
    xpromoDefault && hotlist && welcome && (urlParams.has("nc") || urlParams.has("NC")) && (urlParams.delete("nc"),
        urlParams.delete("NC"),
        modal.style.display = "flex",
        body.style.overflow = "hidden")
}
"use strict";
function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    }
        : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    )(e)
}
function _regeneratorRuntime() {
    _regeneratorRuntime = function () {
        return a
    }
        ;
    var c, a = {}, e = Object.prototype, l = e.hasOwnProperty, s = Object.defineProperty || function (e, t, r) {
        e[t] = r.value
    }
        , t = "function" == typeof Symbol ? Symbol : {}, n = t.iterator || "@@iterator", r = t.asyncIterator || "@@asyncIterator", o = t.toStringTag || "@@toStringTag";
    function i(e, t, r) {
        return Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }),
            e[t]
    }
    try {
        i({}, "")
    } catch (c) {
        i = function (e, t, r) {
            return e[t] = r
        }
    }
    function u(e, t, r, n) {
        var o, i, a, u, t = t && t.prototype instanceof v ? t : v, t = Object.create(t.prototype), n = new x(n || []);
        return s(t, "_invoke", {
            value: (o = e,
                i = r,
                a = n,
                u = m,
                function (e, t) {
                    if (u === d)
                        throw new Error("Generator is already running");
                    if (u === y) {
                        if ("throw" === e)
                            throw t;
                        return {
                            value: c,
                            done: !0
                        }
                    }
                    for (a.method = e,
                        a.arg = t; ;) {
                        var r = a.delegate;
                        if (r) {
                            r = function e(t, r) {
                                var n = r.method
                                    , o = t.iterator[n];
                                if (o === c)
                                    return r.delegate = null,
                                        "throw" === n && t.iterator.return && (r.method = "return",
                                            r.arg = c,
                                            e(t, r),
                                            "throw" === r.method) || "return" !== n && (r.method = "throw",
                                                r.arg = new TypeError("The iterator does not provide a '" + n + "' method")),
                                        h;
                                n = p(o, t.iterator, r.arg);
                                if ("throw" === n.type)
                                    return r.method = "throw",
                                        r.arg = n.arg,
                                        r.delegate = null,
                                        h;
                                o = n.arg;
                                return o ? o.done ? (r[t.resultName] = o.value,
                                    r.next = t.nextLoc,
                                    "return" !== r.method && (r.method = "next",
                                        r.arg = c),
                                    r.delegate = null,
                                    h) : o : (r.method = "throw",
                                        r.arg = new TypeError("iterator result is not an object"),
                                        r.delegate = null,
                                        h)
                            }(r, a);
                            if (r) {
                                if (r === h)
                                    continue;
                                return r
                            }
                        }
                        if ("next" === a.method)
                            a.sent = a._sent = a.arg;
                        else if ("throw" === a.method) {
                            if (u === m)
                                throw u = y,
                                a.arg;
                            a.dispatchException(a.arg)
                        } else
                            "return" === a.method && a.abrupt("return", a.arg);
                        u = d;
                        r = p(o, i, a);
                        if ("normal" === r.type) {
                            if (u = a.done ? y : f,
                                r.arg === h)
                                continue;
                            return {
                                value: r.arg,
                                done: a.done
                            }
                        }
                        "throw" === r.type && (u = y,
                            a.method = "throw",
                            a.arg = r.arg)
                    }
                }
            )
        }),
            t
    }
    function p(e, t, r) {
        try {
            return {
                type: "normal",
                arg: e.call(t, r)
            }
        } catch (e) {
            return {
                type: "throw",
                arg: e
            }
        }
    }
    a.wrap = u;
    var m = "suspendedStart"
        , f = "suspendedYield"
        , d = "executing"
        , y = "completed"
        , h = {};
    function v() { }
    function g() { }
    function b() { }
    var t = {}
        , E = (i(t, n, function () {
            return this
        }),
            Object.getPrototypeOf)
        , E = E && E(E(P([])))
        , w = (E && E !== e && l.call(E, n) && (t = E),
            b.prototype = v.prototype = Object.create(t));
    function k(e) {
        ["next", "throw", "return"].forEach(function (t) {
            i(e, t, function (e) {
                return this._invoke(t, e)
            })
        })
    }
    function L(a, u) {
        var t;
        s(this, "_invoke", {
            value: function (r, n) {
                function e() {
                    return new u(function (e, t) {
                        !function t(e, r, n, o) {
                            var i, e = p(a[e], a, r);
                            if ("throw" !== e.type)
                                return (r = (i = e.arg).value) && "object" == _typeof(r) && l.call(r, "__await") ? u.resolve(r.__await).then(function (e) {
                                    t("next", e, n, o)
                                }, function (e) {
                                    t("throw", e, n, o)
                                }) : u.resolve(r).then(function (e) {
                                    i.value = e,
                                        n(i)
                                }, function (e) {
                                    return t("throw", e, n, o)
                                });
                            o(e.arg)
                        }(r, n, e, t)
                    }
                    )
                }
                return t = t ? t.then(e, e) : e()
            }
        })
    }
    function S(e) {
        var t = {
            tryLoc: e[0]
        };
        1 in e && (t.catchLoc = e[1]),
            2 in e && (t.finallyLoc = e[2],
                t.afterLoc = e[3]),
            this.tryEntries.push(t)
    }
    function _(e) {
        var t = e.completion || {};
        t.type = "normal",
            delete t.arg,
            e.completion = t
    }
    function x(e) {
        this.tryEntries = [{
            tryLoc: "root"
        }],
            e.forEach(S, this),
            this.reset(!0)
    }
    function P(t) {
        if (t || "" === t) {
            var r, e = t[n];
            if (e)
                return e.call(t);
            if ("function" == typeof t.next)
                return t;
            if (!isNaN(t.length))
                return r = -1,
                    (e = function e() {
                        for (; ++r < t.length;)
                            if (l.call(t, r))
                                return e.value = t[r],
                                    e.done = !1,
                                    e;
                        return e.value = c,
                            e.done = !0,
                            e
                    }
                    ).next = e
        }
        throw new TypeError(_typeof(t) + " is not iterable")
    }
    return s(w, "constructor", {
        value: g.prototype = b,
        configurable: !0
    }),
        s(b, "constructor", {
            value: g,
            configurable: !0
        }),
        g.displayName = i(b, o, "GeneratorFunction"),
        a.isGeneratorFunction = function (e) {
            e = "function" == typeof e && e.constructor;
            return !!e && (e === g || "GeneratorFunction" === (e.displayName || e.name))
        }
        ,
        a.mark = function (e) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(e, b) : (e.__proto__ = b,
                i(e, o, "GeneratorFunction")),
                e.prototype = Object.create(w),
                e
        }
        ,
        a.awrap = function (e) {
            return {
                __await: e
            }
        }
        ,
        k(L.prototype),
        i(L.prototype, r, function () {
            return this
        }),
        a.AsyncIterator = L,
        a.async = function (e, t, r, n, o) {
            void 0 === o && (o = Promise);
            var i = new L(u(e, t, r, n), o);
            return a.isGeneratorFunction(t) ? i : i.next().then(function (e) {
                return e.done ? e.value : i.next()
            })
        }
        ,
        k(w),
        i(w, o, "Generator"),
        i(w, n, function () {
            return this
        }),
        i(w, "toString", function () {
            return "[object Generator]"
        }),
        a.keys = function (e) {
            var t, r = Object(e), n = [];
            for (t in r)
                n.push(t);
            return n.reverse(),
                function e() {
                    for (; n.length;) {
                        var t = n.pop();
                        if (t in r)
                            return e.value = t,
                                e.done = !1,
                                e
                    }
                    return e.done = !0,
                        e
                }
        }
        ,
        a.values = P,
        x.prototype = {
            constructor: x,
            reset: function (e) {
                if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = c,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = c,
                    this.tryEntries.forEach(_),
                    !e)
                    for (var t in this)
                        "t" === t.charAt(0) && l.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = c)
            },
            stop: function () {
                this.done = !0;
                var e = this.tryEntries[0].completion;
                if ("throw" === e.type)
                    throw e.arg;
                return this.rval
            },
            dispatchException: function (r) {
                if (this.done)
                    throw r;
                var n = this;
                function e(e, t) {
                    return i.type = "throw",
                        i.arg = r,
                        n.next = e,
                        t && (n.method = "next",
                            n.arg = c),
                        !!t
                }
                for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                    var o = this.tryEntries[t]
                        , i = o.completion;
                    if ("root" === o.tryLoc)
                        return e("end");
                    if (o.tryLoc <= this.prev) {
                        var a = l.call(o, "catchLoc")
                            , u = l.call(o, "finallyLoc");
                        if (a && u) {
                            if (this.prev < o.catchLoc)
                                return e(o.catchLoc, !0);
                            if (this.prev < o.finallyLoc)
                                return e(o.finallyLoc)
                        } else if (a) {
                            if (this.prev < o.catchLoc)
                                return e(o.catchLoc, !0)
                        } else {
                            if (!u)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < o.finallyLoc)
                                return e(o.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function (e, t) {
                for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
                    var n = this.tryEntries[r];
                    if (n.tryLoc <= this.prev && l.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var o = n;
                        break
                    }
                }
                var i = (o = o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc ? null : o) ? o.completion : {};
                return i.type = e,
                    i.arg = t,
                    o ? (this.method = "next",
                        this.next = o.finallyLoc,
                        h) : this.complete(i)
            },
            complete: function (e, t) {
                if ("throw" === e.type)
                    throw e.arg;
                return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === e.type && t && (this.next = t),
                    h
            },
            finish: function (e) {
                for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                    var r = this.tryEntries[t];
                    if (r.finallyLoc === e)
                        return this.complete(r.completion, r.afterLoc),
                            _(r),
                            h
                }
            },
            catch: function (e) {
                for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                    var r, n, o = this.tryEntries[t];
                    if (o.tryLoc === e)
                        return "throw" === (r = o.completion).type && (n = r.arg,
                            _(o)),
                            n
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function (e, t, r) {
                return this.delegate = {
                    iterator: P(e),
                    resultName: t,
                    nextLoc: r
                },
                    "next" === this.method && (this.arg = c),
                    h
            }
        },
        a
}
function asyncGeneratorStep(e, t, r, n, o, i, a) {
    try {
        var u = e[i](a)
            , c = u.value
    } catch (e) {
        return void r(e)
    }
    u.done ? t(c) : Promise.resolve(c).then(n, o)
}
function _asyncToGenerator(u) {
    return function () {
        var e = this
            , a = arguments;
        return new Promise(function (t, r) {
            var n = u.apply(e, a);
            function o(e) {
                asyncGeneratorStep(n, t, r, o, i, "next", e)
            }
            function i(e) {
                asyncGeneratorStep(n, t, r, o, i, "throw", e)
            }
            o(void 0)
        }
        )
    }
}
var alreadyValidated, previousTypedEmail, inputEmail = document.querySelector("input[name='email']");
function maskEmail() {
    inputEmail.value = inputEmail.value.replace(/[^a-zA-Z0-9.@_-]/g, ""),
        inputEmail.value = inputEmail.value.toLowerCase()
}
function checkEmailAddress() {
    return _checkEmailAddress.apply(this, arguments)
}
function _checkEmailAddress() {
    return (_checkEmailAddress = _asyncToGenerator(_regeneratorRuntime().mark(function e() {
        return _regeneratorRuntime().wrap(function (e) {
            for (; ;)
                switch (e.prev = e.next) {
                    case 0:
                        if (!checkEmailSyntax()) {
                            e.next = 10;
                            break
                        }
                        if (alreadyValidated && previousTypedEmail === inputEmail.value) {
                            e.next = 9;
                            break
                        }
                        return e.next = 4,
                            checkEmailAPI();
                    case 4:
                        if (e.sent)
                            return alreadyValidated = !0,
                                previousTypedEmail = inputEmail.value,
                                e.abrupt("return", !0);
                        e.next = 8;
                        break;
                    case 8:
                        return e.abrupt("return", !1);
                    case 9:
                        return e.abrupt("return", !0);
                    case 10:
                    case "end":
                        return e.stop()
                }
        }, e)
    }))).apply(this, arguments)
}
function checkEmailSyntax() {
    return 0 < inputEmail.value.length ? (inputEmail.value = inputEmail.value.trim(),
        /^([a-z0-9]+(?:[._-][a-z0-9]+)*)@([a-z0-9]+(?:[.-][a-z0-9]+)*\.[a-z]{2,})$/i.test(inputEmail.value) ? inputApproved(inputEmail) : inputDenied(inputEmail, "E-mail incorreto")) : inputDenied(inputEmail, "Favor preencher o campo acima")
}
inputEmail.addEventListener("keyup", maskEmail),
    inputEmail.addEventListener("blur", checkEmailAddress);
var inputSourceId = document.querySelector("input[name='sourceId']")
    , inputListCode = document.querySelector("input[name='listCode']")
    , inputEmailPage = document.querySelector("input[name='email_page']")
    , inputLinkUnlocked = document.querySelector("input[name='linkUnlocked']")
    , formSuccesful = (inputSourceId.value = xpromoDefault,
        inputListCode.value = hotlist,
        inputEmailPage.value = welcome,
        inputLinkUnlocked.value = window.location.origin + window.location.pathname,
        urlParams.has("xpromo") && (inputSourceId.value = urlParams.get("xpromo")),
        urlParams.delete("xpromo"),
        document.querySelector(".form_succesful"))
    , formUnlocked = document.querySelector(".form_unlocked");
function unlockPage() {
    var e = 0 === urlParams.size ? "?xpromo=".concat(inputSourceId.value) : "?xpromo=".concat(inputSourceId.value, "&").concat(decodeURIComponent(urlParams.toString()));
    formSuccesful.style.display = "none",
        formUnlocked.style.display = "block",
        responseUserIdentifier ? inputLinkUnlocked.value = e + "&email=".concat(window.btoa(responseUserIdentifier)) : inputLinkUnlocked.value = e + "&email=".concat(window.btoa(inputEmail.value)),
        window.location.href = inputLinkUnlocked.value
}
var alreadyFilled = searchCookie("alreadyFilled-" + siglaCopy);
function inputDenied(e, t) {
    return e.classList.add("errorInput"),
        e.classList.remove("succesfulInput"),
        e.parentElement.nextElementSibling.classList.add("errorMsg"),
        e.parentElement.nextElementSibling.innerHTML = "<p>".concat(t, "</p>"),
        !1
}
function inputApproved(e) {
    return e.classList.remove("errorInput"),
        e.classList.add("succesfulInput"),
        e.parentElement.nextElementSibling.classList.remove("errorMsg"),
        !0
}
alreadyFilled && (urlParams.has("nc") || urlParams.has("NC")) ? (openModal(),
    urlParams.delete("nc"),
    urlParams.delete("NC"),
    document.querySelector(".form_captureLead").classList.add("form_hide"),
    document.querySelector(".modal_complianceText").style.display = "none",
    document.querySelector(".form_unlocked").style.display = "block",
    countDown()) : openModal();
var submit = document.querySelector("button[data-formSubmit]")
    , keyboardSendForm = (submit.addEventListener("click", submitForm),
        function (e) {
            "Enter" === e.key && (e.preventDefault(),
                "flex" === modal.style.display && submitForm(e))
        }
    );
function submitForm(e) {
    return _submitForm.apply(this, arguments)
}
function _submitForm() {
    return (_submitForm = _asyncToGenerator(_regeneratorRuntime().mark(function e(t) {
        return _regeneratorRuntime().wrap(function (e) {
            for (; ;)
                switch (e.prev = e.next) {
                    case 0:
                        return t.preventDefault(),
                            e.next = 3,
                            checkEmailAddress();
                    case 3:
                        if (!e.sent) {
                            e.next = 6;
                            break
                        }
                        formPrepare(),
                            subscribe();
                    case 6:
                    case "end":
                        return e.stop()
                }
        }, e)
    }))).apply(this, arguments)
}
document.addEventListener("keydown", keyboardSendForm);
var formSending = document.querySelector(".form_sending");
function formPrepare() {
    document.querySelector(".form_captureLead").classList.add("form_hide"),
        document.querySelector(".modal_complianceText").style.display = "none",
        formSending.style.display = "block"
}
var formError = document.querySelector(".form_error")
    , resetForm = document.querySelector("button[data-resetForm]");
function formReset() {
    document.querySelector(".form_captureLead").classList.remove("form_hide"),
        document.querySelector(".modal_complianceText").style.display = "block",
        formError.style.display = "none"
}
function blockEmail() {
    inputEmail.setAttribute("disabled", ""),
        inputEmail.setAttribute("id", "lockedInput"),
        document.querySelector("[data-input='email'] .form_field").style.backgroundColor = "#ffffff31",
        document.querySelector("[data-input='email'] .form_field").style.border = "none",
        document.querySelector("[data-input='email'] input").style.color = "#bebebe"
}
resetForm.addEventListener("click", formReset);
"use strict";
function _typeof(t) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
        return typeof t
    }
        : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
    )(t)
}
function _regeneratorRuntime() {
    _regeneratorRuntime = function () {
        return a
    }
        ;
    var u, a = {}, t = Object.prototype, l = t.hasOwnProperty, s = Object.defineProperty || function (t, e, r) {
        t[e] = r.value
    }
        , e = "function" == typeof Symbol ? Symbol : {}, n = e.iterator || "@@iterator", r = e.asyncIterator || "@@asyncIterator", o = e.toStringTag || "@@toStringTag";
    function i(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }),
            t[e]
    }
    try {
        i({}, "")
    } catch (u) {
        i = function (t, e, r) {
            return t[e] = r
        }
    }
    function c(t, e, r, n) {
        var o, i, a, c, e = e && e.prototype instanceof v ? e : v, e = Object.create(e.prototype), n = new O(n || []);
        return s(e, "_invoke", {
            value: (o = t,
                i = r,
                a = n,
                c = h,
                function (t, e) {
                    if (c === y)
                        throw new Error("Generator is already running");
                    if (c === d) {
                        if ("throw" === t)
                            throw e;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (a.method = t,
                        a.arg = e; ;) {
                        var r = a.delegate;
                        if (r) {
                            r = function t(e, r) {
                                var n = r.method
                                    , o = e.iterator[n];
                                if (o === u)
                                    return r.delegate = null,
                                        "throw" === n && e.iterator.return && (r.method = "return",
                                            r.arg = u,
                                            t(e, r),
                                            "throw" === r.method) || "return" !== n && (r.method = "throw",
                                                r.arg = new TypeError("The iterator does not provide a '" + n + "' method")),
                                        m;
                                n = f(o, e.iterator, r.arg);
                                if ("throw" === n.type)
                                    return r.method = "throw",
                                        r.arg = n.arg,
                                        r.delegate = null,
                                        m;
                                o = n.arg;
                                return o ? o.done ? (r[e.resultName] = o.value,
                                    r.next = e.nextLoc,
                                    "return" !== r.method && (r.method = "next",
                                        r.arg = u),
                                    r.delegate = null,
                                    m) : o : (r.method = "throw",
                                        r.arg = new TypeError("iterator result is not an object"),
                                        r.delegate = null,
                                        m)
                            }(r, a);
                            if (r) {
                                if (r === m)
                                    continue;
                                return r
                            }
                        }
                        if ("next" === a.method)
                            a.sent = a._sent = a.arg;
                        else if ("throw" === a.method) {
                            if (c === h)
                                throw c = d,
                                a.arg;
                            a.dispatchException(a.arg)
                        } else
                            "return" === a.method && a.abrupt("return", a.arg);
                        c = y;
                        r = f(o, i, a);
                        if ("normal" === r.type) {
                            if (c = a.done ? d : p,
                                r.arg === m)
                                continue;
                            return {
                                value: r.arg,
                                done: a.done
                            }
                        }
                        "throw" === r.type && (c = d,
                            a.method = "throw",
                            a.arg = r.arg)
                    }
                }
            )
        }),
            e
    }
    function f(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            }
        } catch (t) {
            return {
                type: "throw",
                arg: t
            }
        }
    }
    a.wrap = c;
    var h = "suspendedStart"
        , p = "suspendedYield"
        , y = "executing"
        , d = "completed"
        , m = {};
    function v() { }
    function g() { }
    function w() { }
    var e = {}
        , b = (i(e, n, function () {
            return this
        }),
            Object.getPrototypeOf)
        , b = b && b(b(S([])))
        , E = (b && b !== t && l.call(b, n) && (e = b),
            w.prototype = v.prototype = Object.create(e));
    function x(t) {
        ["next", "throw", "return"].forEach(function (e) {
            i(t, e, function (t) {
                return this._invoke(e, t)
            })
        })
    }
    function L(a, c) {
        var e;
        s(this, "_invoke", {
            value: function (r, n) {
                function t() {
                    return new c(function (t, e) {
                        !function e(t, r, n, o) {
                            var i, t = f(a[t], a, r);
                            if ("throw" !== t.type)
                                return (r = (i = t.arg).value) && "object" == _typeof(r) && l.call(r, "__await") ? c.resolve(r.__await).then(function (t) {
                                    e("next", t, n, o)
                                }, function (t) {
                                    e("throw", t, n, o)
                                }) : c.resolve(r).then(function (t) {
                                    i.value = t,
                                        n(i)
                                }, function (t) {
                                    return e("throw", t, n, o)
                                });
                            o(t.arg)
                        }(r, n, t, e)
                    }
                    )
                }
                return e = e ? e.then(t, t) : t()
            }
        })
    }
    function _(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]),
            2 in t && (e.finallyLoc = t[2],
                e.afterLoc = t[3]),
            this.tryEntries.push(e)
    }
    function k(t) {
        var e = t.completion || {};
        e.type = "normal",
            delete e.arg,
            t.completion = e
    }
    function O(t) {
        this.tryEntries = [{
            tryLoc: "root"
        }],
            t.forEach(_, this),
            this.reset(!0)
    }
    function S(e) {
        if (e || "" === e) {
            var r, t = e[n];
            if (t)
                return t.call(e);
            if ("function" == typeof e.next)
                return e;
            if (!isNaN(e.length))
                return r = -1,
                    (t = function t() {
                        for (; ++r < e.length;)
                            if (l.call(e, r))
                                return t.value = e[r],
                                    t.done = !1,
                                    t;
                        return t.value = u,
                            t.done = !0,
                            t
                    }
                    ).next = t
        }
        throw new TypeError(_typeof(e) + " is not iterable")
    }
    return s(E, "constructor", {
        value: g.prototype = w,
        configurable: !0
    }),
        s(w, "constructor", {
            value: g,
            configurable: !0
        }),
        g.displayName = i(w, o, "GeneratorFunction"),
        a.isGeneratorFunction = function (t) {
            t = "function" == typeof t && t.constructor;
            return !!t && (t === g || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        a.mark = function (t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w,
                i(t, o, "GeneratorFunction")),
                t.prototype = Object.create(E),
                t
        }
        ,
        a.awrap = function (t) {
            return {
                __await: t
            }
        }
        ,
        x(L.prototype),
        i(L.prototype, r, function () {
            return this
        }),
        a.AsyncIterator = L,
        a.async = function (t, e, r, n, o) {
            void 0 === o && (o = Promise);
            var i = new L(c(t, e, r, n), o);
            return a.isGeneratorFunction(e) ? i : i.next().then(function (t) {
                return t.done ? t.value : i.next()
            })
        }
        ,
        x(E),
        i(E, o, "Generator"),
        i(E, n, function () {
            return this
        }),
        i(E, "toString", function () {
            return "[object Generator]"
        }),
        a.keys = function (t) {
            var e, r = Object(t), n = [];
            for (e in r)
                n.push(e);
            return n.reverse(),
                function t() {
                    for (; n.length;) {
                        var e = n.pop();
                        if (e in r)
                            return t.value = e,
                                t.done = !1,
                                t
                    }
                    return t.done = !0,
                        t
                }
        }
        ,
        a.values = S,
        O.prototype = {
            constructor: O,
            reset: function (t) {
                if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = u,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = u,
                    this.tryEntries.forEach(k),
                    !t)
                    for (var e in this)
                        "t" === e.charAt(0) && l.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = u)
            },
            stop: function () {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type)
                    throw t.arg;
                return this.rval
            },
            dispatchException: function (r) {
                if (this.done)
                    throw r;
                var n = this;
                function t(t, e) {
                    return i.type = "throw",
                        i.arg = r,
                        n.next = t,
                        e && (n.method = "next",
                            n.arg = u),
                        !!e
                }
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var o = this.tryEntries[e]
                        , i = o.completion;
                    if ("root" === o.tryLoc)
                        return t("end");
                    if (o.tryLoc <= this.prev) {
                        var a = l.call(o, "catchLoc")
                            , c = l.call(o, "finallyLoc");
                        if (a && c) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0);
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        } else if (a) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function (t, e) {
                for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
                    var n = this.tryEntries[r];
                    if (n.tryLoc <= this.prev && l.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var o = n;
                        break
                    }
                }
                var i = (o = o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc ? null : o) ? o.completion : {};
                return i.type = t,
                    i.arg = e,
                    o ? (this.method = "next",
                        this.next = o.finallyLoc,
                        m) : this.complete(i)
            },
            complete: function (t, e) {
                if ("throw" === t.type)
                    throw t.arg;
                return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === t.type && e && (this.next = e),
                    m
            },
            finish: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r = this.tryEntries[e];
                    if (r.finallyLoc === t)
                        return this.complete(r.completion, r.afterLoc),
                            k(r),
                            m
                }
            },
            catch: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r, n, o = this.tryEntries[e];
                    if (o.tryLoc === t)
                        return "throw" === (r = o.completion).type && (n = r.arg,
                            k(o)),
                            n
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function (t, e, r) {
                return this.delegate = {
                    iterator: S(t),
                    resultName: e,
                    nextLoc: r
                },
                    "next" === this.method && (this.arg = u),
                    m
            }
        },
        a
}
function asyncGeneratorStep(t, e, r, n, o, i, a) {
    try {
        var c = t[i](a)
            , u = c.value
    } catch (t) {
        return void r(t)
    }
    c.done ? e(u) : Promise.resolve(u).then(n, o)
}
function _asyncToGenerator(c) {
    return function () {
        var t = this
            , a = arguments;
        return new Promise(function (e, r) {
            var n = c.apply(t, a);
            function o(t) {
                asyncGeneratorStep(n, e, r, o, i, "next", t)
            }
            function i(t) {
                asyncGeneratorStep(n, e, r, o, i, "throw", t)
            }
            o(void 0)
        }
        )
    }
}
function checkEmailAPI() {
    return _checkEmailAPI.apply(this, arguments)
}
function _checkEmailAPI() {
    return (_checkEmailAPI = _asyncToGenerator(_regeneratorRuntime().mark(function t() {
        var e, r;
        return _regeneratorRuntime().wrap(function (t) {
            for (; ;)
                switch (t.prev = t.next) {
                    case 0:
                        return t.next = 2,
                            fetch("https://ws.empiiiiricus.com.br/checkemailaddress?emailAddress=".concat(inputEmail.value), {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                }
                            }).then(inputDenied(inputEmail, "Validando E-mail")).then(inputEmail.parentElement.nextElementSibling.firstChild.style.backgroundColor = "#c36d17");
                    case 2:
                        return e = t.sent,
                            t.next = 5,
                            e.json();
                    case 5:
                        if (r = t.sent,
                            200 != e.status) {
                            t.next = 10;
                            break
                        }
                        if (r.valid)
                            return t.abrupt("return", inputApproved(inputEmail));
                        t.next = 9;
                        break;
                    case 9:
                        return t.abrupt("return", inputDenied(inputEmail, "E-mail inválido"));
                    case 10:
                        return t.abrupt("return", inputDenied(inputEmail, "Ocorreu um Erro"));
                    case 11:
                    case "end":
                        return t.stop()
                }
        }, t)
    }))).apply(this, arguments)
}
"use strict";
function searchCookie(e) {
    for (var o, r = decodeURIComponent(document.cookie).split(";"), i = 0; i < r.length; i++) {
        for (; " " == r[i].charAt(0);)
            r[i] = r[i].substring(1);
        if ((o = r[i].split("="))[0] === e)
            return o[1]
    }
    return !1
}
function saveCookie(e, o, r) {
    var i = new Date
        , r = (i.setTime(i.getTime() + 1e3 * r * 60 * 60 * 24),
            "expires=" + i.toUTCString());
    return document.cookie = e + "=" + o + ";" + r + ";path=/",
        ""
}
var alreadyVisited = searchCookie("alreadyVisited-" + siglaCopy)
    , urlNC = (console.log("alreadyVisited: " + alreadyVisited),
        new URLSearchParams(window.location.search));
console.log("urlNC: " + urlNC),
    console.log('urlNC.has("nc"): ' + urlNC.has("nc")),
    "true" !== alreadyVisited && !0 !== urlNC.has("nc") && saveCookie("alreadyVisited-" + siglaCopy, "true", "365");
"use strict";
function _typeof(t) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
        return typeof t
    }
        : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
    )(t)
}
function _regeneratorRuntime() {
    _regeneratorRuntime = function () {
        return a
    }
        ;
    var u, a = {}, t = Object.prototype, s = t.hasOwnProperty, l = Object.defineProperty || function (t, e, r) {
        t[e] = r.value
    }
        , e = "function" == typeof Symbol ? Symbol : {}, n = e.iterator || "@@iterator", r = e.asyncIterator || "@@asyncIterator", o = e.toStringTag || "@@toStringTag";
    function i(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }),
            t[e]
    }
    try {
        i({}, "")
    } catch (u) {
        i = function (t, e, r) {
            return t[e] = r
        }
    }
    function c(t, e, r, n) {
        var o, i, a, c, e = e && e.prototype instanceof g ? e : g, e = Object.create(e.prototype), n = new k(n || []);
        return l(e, "_invoke", {
            value: (o = t,
                i = r,
                a = n,
                c = h,
                function (t, e) {
                    if (c === y)
                        throw new Error("Generator is already running");
                    if (c === m) {
                        if ("throw" === t)
                            throw e;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (a.method = t,
                        a.arg = e; ;) {
                        var r = a.delegate;
                        if (r) {
                            r = function t(e, r) {
                                var n = r.method
                                    , o = e.iterator[n];
                                if (o === u)
                                    return r.delegate = null,
                                        "throw" === n && e.iterator.return && (r.method = "return",
                                            r.arg = u,
                                            t(e, r),
                                            "throw" === r.method) || "return" !== n && (r.method = "throw",
                                                r.arg = new TypeError("The iterator does not provide a '" + n + "' method")),
                                        d;
                                n = f(o, e.iterator, r.arg);
                                if ("throw" === n.type)
                                    return r.method = "throw",
                                        r.arg = n.arg,
                                        r.delegate = null,
                                        d;
                                o = n.arg;
                                return o ? o.done ? (r[e.resultName] = o.value,
                                    r.next = e.nextLoc,
                                    "return" !== r.method && (r.method = "next",
                                        r.arg = u),
                                    r.delegate = null,
                                    d) : o : (r.method = "throw",
                                        r.arg = new TypeError("iterator result is not an object"),
                                        r.delegate = null,
                                        d)
                            }(r, a);
                            if (r) {
                                if (r === d)
                                    continue;
                                return r
                            }
                        }
                        if ("next" === a.method)
                            a.sent = a._sent = a.arg;
                        else if ("throw" === a.method) {
                            if (c === h)
                                throw c = m,
                                a.arg;
                            a.dispatchException(a.arg)
                        } else
                            "return" === a.method && a.abrupt("return", a.arg);
                        c = y;
                        r = f(o, i, a);
                        if ("normal" === r.type) {
                            if (c = a.done ? m : p,
                                r.arg === d)
                                continue;
                            return {
                                value: r.arg,
                                done: a.done
                            }
                        }
                        "throw" === r.type && (c = m,
                            a.method = "throw",
                            a.arg = r.arg)
                    }
                }
            )
        }),
            e
    }
    function f(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            }
        } catch (t) {
            return {
                type: "throw",
                arg: t
            }
        }
    }
    a.wrap = c;
    var h = "suspendedStart"
        , p = "suspendedYield"
        , y = "executing"
        , m = "completed"
        , d = {};
    function g() { }
    function v() { }
    function w() { }
    var e = {}
        , _ = (i(e, n, function () {
            return this
        }),
            Object.getPrototypeOf)
        , _ = _ && _(_(C([])))
        , E = (_ && _ !== t && s.call(_, n) && (e = _),
            w.prototype = g.prototype = Object.create(e));
    function b(t) {
        ["next", "throw", "return"].forEach(function (e) {
            i(t, e, function (t) {
                return this._invoke(e, t)
            })
        })
    }
    function x(a, c) {
        var e;
        l(this, "_invoke", {
            value: function (r, n) {
                function t() {
                    return new c(function (t, e) {
                        !function e(t, r, n, o) {
                            var i, t = f(a[t], a, r);
                            if ("throw" !== t.type)
                                return (r = (i = t.arg).value) && "object" == _typeof(r) && s.call(r, "__await") ? c.resolve(r.__await).then(function (t) {
                                    e("next", t, n, o)
                                }, function (t) {
                                    e("throw", t, n, o)
                                }) : c.resolve(r).then(function (t) {
                                    i.value = t,
                                        n(i)
                                }, function (t) {
                                    return e("throw", t, n, o)
                                });
                            o(t.arg)
                        }(r, n, t, e)
                    }
                    )
                }
                return e = e ? e.then(t, t) : t()
            }
        })
    }
    function O(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]),
            2 in t && (e.finallyLoc = t[2],
                e.afterLoc = t[3]),
            this.tryEntries.push(e)
    }
    function L(t) {
        var e = t.completion || {};
        e.type = "normal",
            delete e.arg,
            t.completion = e
    }
    function k(t) {
        this.tryEntries = [{
            tryLoc: "root"
        }],
            t.forEach(O, this),
            this.reset(!0)
    }
    function C(e) {
        if (e || "" === e) {
            var r, t = e[n];
            if (t)
                return t.call(e);
            if ("function" == typeof e.next)
                return e;
            if (!isNaN(e.length))
                return r = -1,
                    (t = function t() {
                        for (; ++r < e.length;)
                            if (s.call(e, r))
                                return t.value = e[r],
                                    t.done = !1,
                                    t;
                        return t.value = u,
                            t.done = !0,
                            t
                    }
                    ).next = t
        }
        throw new TypeError(_typeof(e) + " is not iterable")
    }
    return l(E, "constructor", {
        value: v.prototype = w,
        configurable: !0
    }),
        l(w, "constructor", {
            value: v,
            configurable: !0
        }),
        v.displayName = i(w, o, "GeneratorFunction"),
        a.isGeneratorFunction = function (t) {
            t = "function" == typeof t && t.constructor;
            return !!t && (t === v || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        a.mark = function (t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w,
                i(t, o, "GeneratorFunction")),
                t.prototype = Object.create(E),
                t
        }
        ,
        a.awrap = function (t) {
            return {
                __await: t
            }
        }
        ,
        b(x.prototype),
        i(x.prototype, r, function () {
            return this
        }),
        a.AsyncIterator = x,
        a.async = function (t, e, r, n, o) {
            void 0 === o && (o = Promise);
            var i = new x(c(t, e, r, n), o);
            return a.isGeneratorFunction(e) ? i : i.next().then(function (t) {
                return t.done ? t.value : i.next()
            })
        }
        ,
        b(E),
        i(E, o, "Generator"),
        i(E, n, function () {
            return this
        }),
        i(E, "toString", function () {
            return "[object Generator]"
        }),
        a.keys = function (t) {
            var e, r = Object(t), n = [];
            for (e in r)
                n.push(e);
            return n.reverse(),
                function t() {
                    for (; n.length;) {
                        var e = n.pop();
                        if (e in r)
                            return t.value = e,
                                t.done = !1,
                                t
                    }
                    return t.done = !0,
                        t
                }
        }
        ,
        a.values = C,
        k.prototype = {
            constructor: k,
            reset: function (t) {
                if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = u,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = u,
                    this.tryEntries.forEach(L),
                    !t)
                    for (var e in this)
                        "t" === e.charAt(0) && s.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = u)
            },
            stop: function () {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type)
                    throw t.arg;
                return this.rval
            },
            dispatchException: function (r) {
                if (this.done)
                    throw r;
                var n = this;
                function t(t, e) {
                    return i.type = "throw",
                        i.arg = r,
                        n.next = t,
                        e && (n.method = "next",
                            n.arg = u),
                        !!e
                }
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var o = this.tryEntries[e]
                        , i = o.completion;
                    if ("root" === o.tryLoc)
                        return t("end");
                    if (o.tryLoc <= this.prev) {
                        var a = s.call(o, "catchLoc")
                            , c = s.call(o, "finallyLoc");
                        if (a && c) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0);
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        } else if (a) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function (t, e) {
                for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
                    var n = this.tryEntries[r];
                    if (n.tryLoc <= this.prev && s.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var o = n;
                        break
                    }
                }
                var i = (o = o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc ? null : o) ? o.completion : {};
                return i.type = t,
                    i.arg = e,
                    o ? (this.method = "next",
                        this.next = o.finallyLoc,
                        d) : this.complete(i)
            },
            complete: function (t, e) {
                if ("throw" === t.type)
                    throw t.arg;
                return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === t.type && e && (this.next = e),
                    d
            },
            finish: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r = this.tryEntries[e];
                    if (r.finallyLoc === t)
                        return this.complete(r.completion, r.afterLoc),
                            L(r),
                            d
                }
            },
            catch: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r, n, o = this.tryEntries[e];
                    if (o.tryLoc === t)
                        return "throw" === (r = o.completion).type && (n = r.arg,
                            L(o)),
                            n
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function (t, e, r) {
                return this.delegate = {
                    iterator: C(t),
                    resultName: e,
                    nextLoc: r
                },
                    "next" === this.method && (this.arg = u),
                    d
            }
        },
        a
}
function asyncGeneratorStep(t, e, r, n, o, i, a) {
    try {
        var c = t[i](a)
            , u = c.value
    } catch (t) {
        return void r(t)
    }
    c.done ? e(u) : Promise.resolve(u).then(n, o)
}
function _asyncToGenerator(c) {
    return function () {
        var t = this
            , a = arguments;
        return new Promise(function (e, r) {
            var n = c.apply(t, a);
            function o(t) {
                asyncGeneratorStep(n, e, r, o, i, "next", t)
            }
            function i(t) {
                asyncGeneratorStep(n, e, r, o, i, "throw", t)
            }
            o(void 0)
        }
        )
    }
}
var cookieEmpU = searchCookie("COOKIE_EMP_U") || null
    , cookieEmpAllowCookies = searchCookie("COOKIE_EMP_ALLOW_COOKIES") || null;
function lgpd() {
    return _lgpd.apply(this, arguments)
}
function _lgpd() {
    return (_lgpd = _asyncToGenerator(_regeneratorRuntime().mark(function t() {
        return _regeneratorRuntime().wrap(function (t) {
            for (; ;)
                switch (t.prev = t.next) {
                    case 0:
                        if (null === cookieEmpU)
                            return t.next = 3,
                                getHashUser();
                        t.next = 4;
                        break;
                    case 3:
                        return t.abrupt("return", t.sent);
                    case 4:
                        return t.next = 6,
                            sendTermsAccept(cookieEmpU);
                    case 6:
                        return t.abrupt("return", t.sent);
                    case 7:
                    case "end":
                        return t.stop()
                }
        }, t)
    }))).apply(this, arguments)
}
function getHashUser() {
    return _getHashUser.apply(this, arguments)
}
function _getHashUser() {
    return (_getHashUser = _asyncToGenerator(_regeneratorRuntime().mark(function t() {
        var e, r, n;
        return _regeneratorRuntime().wrap(function (t) {
            for (; ;)
                switch (t.prev = t.next) {
                    case 0:
                        return n = window.btoa(inputEmail.value),
                            t.next = 3,
                            fetch("https://www.usuario.empiiiiricus.com.br/tracking/hash?email=".concat(n), {
                                method: "GET",
                                headers: {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                }
                            });
                    case 3:
                        return e = t.sent,
                            t.next = 6,
                            e.json();
                    case 6:
                        return r = t.sent,
                            t.t0 = console,
                            t.next = 10,
                            r;
                    case 10:
                        if (t.t1 = t.sent,
                            t.t0.log.call(t.t0, t.t1),
                            200 == e.status || 201 == e.status)
                            return t.next = 15,
                                r.hash;
                        t.next = 20;
                        break;
                    case 15:
                        return n = t.sent,
                            saveCookie("COOKIE_EMP_U", n, 22e3),
                            t.abrupt("return", sendTermsAccept(n));
                    case 20:
                        400 <= e.status && console.log("falhou ao criar Hash do usuário");
                    case 21:
                    case "end":
                        return t.stop()
                }
        }, t)
    }))).apply(this, arguments)
}
function sendTermsAccept(t) {
    return _sendTermsAccept.apply(this, arguments)
}
function _sendTermsAccept() {
    return (_sendTermsAccept = _asyncToGenerator(_regeneratorRuntime().mark(function t(e) {
        var r, n, o;
        return _regeneratorRuntime().wrap(function (t) {
            for (; ;)
                switch (t.prev = t.next) {
                    case 0:
                        if (null === cookieEmpAllowCookies)
                            return r = {
                                idUser: e,
                                optin: !0
                            },
                                t.next = 4,
                                fetch("https://api-userpreferences.empiiiiricus.com.br/v1/api/termsAccept", {
                                    method: "POST",
                                    body: JSON.stringify(r),
                                    headers: {
                                        "Content-Type": "application/json; charset=UTF-8"
                                    }
                                });
                        t.next = 35;
                        break;
                    case 4:
                        return n = t.sent,
                            t.next = 7,
                            n.json();
                    case 7:
                        return o = t.sent,
                            t.t0 = console,
                            t.next = 11,
                            o;
                    case 11:
                        if (t.t1 = t.sent,
                            t.t0.log.call(t.t0, t.t1),
                            200 == n.status || 201 == n.status)
                            return saveCookie("COOKIE_EMP_ALLOW_COOKIES", "true", 22e3),
                                t.t2 = console,
                                t.next = 18,
                                o.optin;
                        t.next = 23;
                        break;
                    case 18:
                        return t.t3 = t.sent,
                            t.t2.log.call(t.t2, "criou o COOKIE_EMP_ALLOW_COOKIES: ", t.t3),
                            t.abrupt("return", !0);
                    case 23:
                        if (400 <= n.status)
                            return t.t4 = console,
                                t.next = 27,
                                o.status;
                        t.next = 33;
                        break;
                    case 27:
                        return t.t5 = t.sent,
                            t.next = 30,
                            o.cause;
                    case 30:
                        return t.t6 = t.sent,
                            t.t4.log.call(t.t4, "falhou ao criar o COOKIE_EMP_ALLOW_COOKIES: ", t.t5, t.t6),
                            t.abrupt("return", !1);
                    case 33:
                        t.next = 38;
                        break;
                    case 35:
                        return console.log("já tem COOKIE_EMP_ALLOW_COOKIES"),
                            cookieEmpAllowCookies = !0,
                            t.abrupt("return", !0);
                    case 38:
                    case "end":
                        return t.stop()
                }
        }, t)
    }))).apply(this, arguments)
}
"use strict";
function _typeof(t) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
        return typeof t
    }
        : function (t) {
            return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t
        }
    )(t)
}
function _regeneratorRuntime() {
    _regeneratorRuntime = function () {
        return a
    }
        ;
    var u, a = {}, t = Object.prototype, s = t.hasOwnProperty, l = Object.defineProperty || function (t, e, r) {
        t[e] = r.value
    }
        , e = "function" == typeof Symbol ? Symbol : {}, n = e.iterator || "@@iterator", r = e.asyncIterator || "@@asyncIterator", o = e.toStringTag || "@@toStringTag";
    function i(t, e, r) {
        return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }),
            t[e]
    }
    try {
        i({}, "")
    } catch (u) {
        i = function (t, e, r) {
            return t[e] = r
        }
    }
    function c(t, e, r, n) {
        var o, i, a, c, e = e && e.prototype instanceof v ? e : v, e = Object.create(e.prototype), n = new S(n || []);
        return l(e, "_invoke", {
            value: (o = t,
                i = r,
                a = n,
                c = h,
                function (t, e) {
                    if (c === y)
                        throw new Error("Generator is already running");
                    if (c === d) {
                        if ("throw" === t)
                            throw e;
                        return {
                            value: u,
                            done: !0
                        }
                    }
                    for (a.method = t,
                        a.arg = e; ;) {
                        var r = a.delegate;
                        if (r) {
                            r = function t(e, r) {
                                var n = r.method
                                    , o = e.iterator[n];
                                if (o === u)
                                    return r.delegate = null,
                                        "throw" === n && e.iterator.return && (r.method = "return",
                                            r.arg = u,
                                            t(e, r),
                                            "throw" === r.method) || "return" !== n && (r.method = "throw",
                                                r.arg = new TypeError("The iterator does not provide a '" + n + "' method")),
                                        m;
                                n = f(o, e.iterator, r.arg);
                                if ("throw" === n.type)
                                    return r.method = "throw",
                                        r.arg = n.arg,
                                        r.delegate = null,
                                        m;
                                o = n.arg;
                                return o ? o.done ? (r[e.resultName] = o.value,
                                    r.next = e.nextLoc,
                                    "return" !== r.method && (r.method = "next",
                                        r.arg = u),
                                    r.delegate = null,
                                    m) : o : (r.method = "throw",
                                        r.arg = new TypeError("iterator result is not an object"),
                                        r.delegate = null,
                                        m)
                            }(r, a);
                            if (r) {
                                if (r === m)
                                    continue;
                                return r
                            }
                        }
                        if ("next" === a.method)
                            a.sent = a._sent = a.arg;
                        else if ("throw" === a.method) {
                            if (c === h)
                                throw c = d,
                                a.arg;
                            a.dispatchException(a.arg)
                        } else
                            "return" === a.method && a.abrupt("return", a.arg);
                        c = y;
                        r = f(o, i, a);
                        if ("normal" === r.type) {
                            if (c = a.done ? d : p,
                                r.arg === m)
                                continue;
                            return {
                                value: r.arg,
                                done: a.done
                            }
                        }
                        "throw" === r.type && (c = d,
                            a.method = "throw",
                            a.arg = r.arg)
                    }
                }
            )
        }),
            e
    }
    function f(t, e, r) {
        try {
            return {
                type: "normal",
                arg: t.call(e, r)
            }
        } catch (t) {
            return {
                type: "throw",
                arg: t
            }
        }
    }
    a.wrap = c;
    var h = "suspendedStart"
        , p = "suspendedYield"
        , y = "executing"
        , d = "completed"
        , m = {};
    function v() { }
    function g() { }
    function w() { }
    var e = {}
        , b = (i(e, n, function () {
            return this
        }),
            Object.getPrototypeOf)
        , b = b && b(b(T([])))
        , E = (b && b !== t && s.call(b, n) && (e = b),
            w.prototype = v.prototype = Object.create(e));
    function x(t) {
        ["next", "throw", "return"].forEach(function (e) {
            i(t, e, function (t) {
                return this._invoke(e, t)
            })
        })
    }
    function L(a, c) {
        var e;
        l(this, "_invoke", {
            value: function (r, n) {
                function t() {
                    return new c(function (t, e) {
                        !function e(t, r, n, o) {
                            var i, t = f(a[t], a, r);
                            if ("throw" !== t.type)
                                return (r = (i = t.arg).value) && "object" == _typeof(r) && s.call(r, "__await") ? c.resolve(r.__await).then(function (t) {
                                    e("next", t, n, o)
                                }, function (t) {
                                    e("throw", t, n, o)
                                }) : c.resolve(r).then(function (t) {
                                    i.value = t,
                                        n(i)
                                }, function (t) {
                                    return e("throw", t, n, o)
                                });
                            o(t.arg)
                        }(r, n, t, e)
                    }
                    )
                }
                return e = e ? e.then(t, t) : t()
            }
        })
    }
    function _(t) {
        var e = {
            tryLoc: t[0]
        };
        1 in t && (e.catchLoc = t[1]),
            2 in t && (e.finallyLoc = t[2],
                e.afterLoc = t[3]),
            this.tryEntries.push(e)
    }
    function k(t) {
        var e = t.completion || {};
        e.type = "normal",
            delete e.arg,
            t.completion = e
    }
    function S(t) {
        this.tryEntries = [{
            tryLoc: "root"
        }],
            t.forEach(_, this),
            this.reset(!0)
    }
    function T(e) {
        if (e || "" === e) {
            var r, t = e[n];
            if (t)
                return t.call(e);
            if ("function" == typeof e.next)
                return e;
            if (!isNaN(e.length))
                return r = -1,
                    (t = function t() {
                        for (; ++r < e.length;)
                            if (s.call(e, r))
                                return t.value = e[r],
                                    t.done = !1,
                                    t;
                        return t.value = u,
                            t.done = !0,
                            t
                    }
                    ).next = t
        }
        throw new TypeError(_typeof(e) + " is not iterable")
    }
    return l(E, "constructor", {
        value: g.prototype = w,
        configurable: !0
    }),
        l(w, "constructor", {
            value: g,
            configurable: !0
        }),
        g.displayName = i(w, o, "GeneratorFunction"),
        a.isGeneratorFunction = function (t) {
            t = "function" == typeof t && t.constructor;
            return !!t && (t === g || "GeneratorFunction" === (t.displayName || t.name))
        }
        ,
        a.mark = function (t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, w) : (t.__proto__ = w,
                i(t, o, "GeneratorFunction")),
                t.prototype = Object.create(E),
                t
        }
        ,
        a.awrap = function (t) {
            return {
                __await: t
            }
        }
        ,
        x(L.prototype),
        i(L.prototype, r, function () {
            return this
        }),
        a.AsyncIterator = L,
        a.async = function (t, e, r, n, o) {
            void 0 === o && (o = Promise);
            var i = new L(c(t, e, r, n), o);
            return a.isGeneratorFunction(e) ? i : i.next().then(function (t) {
                return t.done ? t.value : i.next()
            })
        }
        ,
        x(E),
        i(E, o, "Generator"),
        i(E, n, function () {
            return this
        }),
        i(E, "toString", function () {
            return "[object Generator]"
        }),
        a.keys = function (t) {
            var e, r = Object(t), n = [];
            for (e in r)
                n.push(e);
            return n.reverse(),
                function t() {
                    for (; n.length;) {
                        var e = n.pop();
                        if (e in r)
                            return t.value = e,
                                t.done = !1,
                                t
                    }
                    return t.done = !0,
                        t
                }
        }
        ,
        a.values = T,
        S.prototype = {
            constructor: S,
            reset: function (t) {
                if (this.prev = 0,
                    this.next = 0,
                    this.sent = this._sent = u,
                    this.done = !1,
                    this.delegate = null,
                    this.method = "next",
                    this.arg = u,
                    this.tryEntries.forEach(k),
                    !t)
                    for (var e in this)
                        "t" === e.charAt(0) && s.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = u)
            },
            stop: function () {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type)
                    throw t.arg;
                return this.rval
            },
            dispatchException: function (r) {
                if (this.done)
                    throw r;
                var n = this;
                function t(t, e) {
                    return i.type = "throw",
                        i.arg = r,
                        n.next = t,
                        e && (n.method = "next",
                            n.arg = u),
                        !!e
                }
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var o = this.tryEntries[e]
                        , i = o.completion;
                    if ("root" === o.tryLoc)
                        return t("end");
                    if (o.tryLoc <= this.prev) {
                        var a = s.call(o, "catchLoc")
                            , c = s.call(o, "finallyLoc");
                        if (a && c) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0);
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        } else if (a) {
                            if (this.prev < o.catchLoc)
                                return t(o.catchLoc, !0)
                        } else {
                            if (!c)
                                throw new Error("try statement without catch or finally");
                            if (this.prev < o.finallyLoc)
                                return t(o.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function (t, e) {
                for (var r = this.tryEntries.length - 1; 0 <= r; --r) {
                    var n = this.tryEntries[r];
                    if (n.tryLoc <= this.prev && s.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var o = n;
                        break
                    }
                }
                var i = (o = o && ("break" === t || "continue" === t) && o.tryLoc <= e && e <= o.finallyLoc ? null : o) ? o.completion : {};
                return i.type = t,
                    i.arg = e,
                    o ? (this.method = "next",
                        this.next = o.finallyLoc,
                        m) : this.complete(i)
            },
            complete: function (t, e) {
                if ("throw" === t.type)
                    throw t.arg;
                return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg,
                    this.method = "return",
                    this.next = "end") : "normal" === t.type && e && (this.next = e),
                    m
            },
            finish: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r = this.tryEntries[e];
                    if (r.finallyLoc === t)
                        return this.complete(r.completion, r.afterLoc),
                            k(r),
                            m
                }
            },
            catch: function (t) {
                for (var e = this.tryEntries.length - 1; 0 <= e; --e) {
                    var r, n, o = this.tryEntries[e];
                    if (o.tryLoc === t)
                        return "throw" === (r = o.completion).type && (n = r.arg,
                            k(o)),
                            n
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function (t, e, r) {
                return this.delegate = {
                    iterator: T(t),
                    resultName: e,
                    nextLoc: r
                },
                    "next" === this.method && (this.arg = u),
                    m
            }
        },
        a
}
function asyncGeneratorStep(t, e, r, n, o, i, a) {
    try {
        var c = t[i](a)
            , u = c.value
    } catch (t) {
        return void r(t)
    }
    c.done ? e(u) : Promise.resolve(u).then(n, o)
}
function _asyncToGenerator(c) {
    return function () {
        var t = this
            , a = arguments;
        return new Promise(function (e, r) {
            var n = c.apply(t, a);
            function o(t) {
                asyncGeneratorStep(n, e, r, o, i, "next", t)
            }
            function i(t) {
                asyncGeneratorStep(n, e, r, o, i, "throw", t)
            }
            o(void 0)
        }
        )
    }
}
function subscribe() {
    return _subscribe.apply(this, arguments)
}
function _subscribe() {
    return (_subscribe = _asyncToGenerator(_regeneratorRuntime().mark(function t() {
        var e, r;
        return _regeneratorRuntime().wrap(function (t) {
            for (; ;)
                switch (t.prev = t.next) {
                    case 0:
                        return e = prepareFormUrlEncoded({
                            sourceId: inputSourceId.value,
                            emailAddress: inputEmail.value,
                            email_page: inputEmailPage.value,
                            listCode: inputListCode.value
                        }),
                            t.next = 4,
                            fetch("https://ws.empiiiiricus.com.br/subscribe", {
                                method: "POST",
                                body: e,
                                headers: {
                                    "Content-Type": "application/x-www-form-urlencoded;"
                                }
                            });
                    case 4:
                        return r = t.sent,
                            t.next = 7,
                            lgpd();
                    case 7:
                        if (t.t0 = t.sent,
                            !t.t0) {
                            t.next = 10;
                            break
                        }
                        t.t0 = 200 == r.status || 409 == r.status;
                    case 10:
                        if (!t.t0) {
                            t.next = 18;
                            break
                        }
                        console.log("usuário cadastrado: " + r.status),
                            saveCookie("alreadyFilled-" + siglaCopy, "true", "365"),
                            formSending.style.display = "none",
                            formSuccesful.style.display = "block",
                            countDown(),
                            t.next = 22;
                        break;
                    case 18:
                        console.log("erro no subscribe" + cookieEmpAllowCookies),
                            console.log("erro ao cadastrar usuário: " + r.status),
                            formSending.style.display = "none",
                            formError.style.display = "block";
                    case 22:
                    case "end":
                        return t.stop()
                }
        }, t)
    }))).apply(this, arguments)
}
var redirectTimeout, secondsToRedirect = 5, timer = document.querySelectorAll(".timer");
function countDown() {
    document.querySelectorAll("button[data-linkPageUnlocked]").forEach(function (t) {
        t.addEventListener("click", unlockPage)
    }),
        redirectTimeout = setInterval(function () {
            1 < secondsToRedirect ? (secondsToRedirect--,
                timer.forEach(function (t) {
                    t.innerHTML = secondsToRedirect
                })) : unlockPage()
        }, 1e3)
}
function prepareFormUrlEncoded(t) {
    var e, r = [];
    for (e in t) {
        var n = encodeURIComponent(e)
            , o = encodeURIComponent(t[e]);
        r.push(n + "=" + o)
    }
    return r = r.join("&")
}
timer.forEach(function (t) {
    t.innerHTML = secondsToRedirect
});

"use strict";

var viewPort = window;
function animar() {
    Anima(".main_break h2", "fadeInUp", 0),
        Anima(".main_wrapperCta", "pulse", 0),
        Anima(".contato", "fadeInUp", 0),
        Anima(".garantia_col1", "fadeInLeft", 0),
        Anima(".garantia_col2", "fadeInRight", 0),
        Anima(".mdmedia_cardNumbers:nth-of-type(1)", "fadeInUp", 0),
        Anima(".mdmedia_cardNumbers:nth-of-type(2)", "fadeInUp", 100),
        Anima(".mdmedia_cardNumbers:nth-of-type(3)", "fadeInUp", 200)
}
function Anima(n, a, e) {
    document.querySelectorAll(n).forEach(function (n) {
        n.getBoundingClientRect().top <= .8 * window.innerHeight && setTimeout(function () {
            n.classList.add(a)
        }, e)
    })
}
viewPort.addEventListener("load", animar),
    viewPort.addEventListener("scroll", animar);

"use strict";

var imagesCopy = document.querySelectorAll("img[data-src]")
    , viewPortLazy = window;
function insertSpinner() {
    imagesCopy.forEach(function (t) {
        t.classList.add("lazyImg"),
            t.insertAdjacentHTML("afterend", '<div class="lazySpinner"></div>'),
            t.getBoundingClientRect().top <= 2 * document.documentElement.clientHeight && (t.classList.add("lazyImg-loaded"),
                t.setAttribute("src", t.getAttribute("data-src")),
                t.removeAttribute("data-src"),
                t.parentNode.removeChild(t.nextSibling))
    }),
        viewPortLazy.addEventListener("scroll", function () {
            imagesCopy.forEach(function (t) {
                t.getBoundingClientRect().top <= 2 * document.documentElement.clientHeight && (Array.from(t.classList).includes("lazyImg-loaded") || (t.setAttribute("src", t.getAttribute("data-src")),
                    t.removeAttribute("data-src"),
                    t.classList.add("lazyImg-loaded"),
                    t.parentNode.removeChild(t.nextSibling)))
            })
        })
}
viewPortLazy.addEventListener("load", insertSpinner);
"use strict";

var verificaScrolagem = document.querySelector("body")
    , logoBar = document.querySelector(".navBar")
    , verificaLogoBar = document;
function fixedHeader() {
    verificaScrolagem.getBoundingClientRect().top < -5 ? logoBar.classList.add("navBar_fixed") : logoBar.classList.remove("navBar_fixed")
}
verificaLogoBar.addEventListener("scroll", fixedHeader),
    verificaLogoBar.addEventListener("load", fixedHeader);
"use strict";
var verifyBell, blinkTitle, bellButton, bellButtonIcon, getTargetClick, bellBox, activateBell, viewPortBell, originalPageTitle;
displayBell && (verifyBell = function e() {
    activateBell.getBoundingClientRect().bottom <= .8 * window.innerHeight && (bellButton.classList.add("bell_button-active"),
        bellButtonIcon.classList.add("bell_ring"),
        document.querySelector(".navBar_logo").classList.add("after_bell"),
        document.querySelector(".disclaimer p").classList.add("after_bell"),
        viewPortBell.removeEventListener("load", e),
        viewPortBell.removeEventListener("scroll", e),
        blinkTitle(),
        "" !== checkout1 && "" !== checkout2 && (bellCta.removeAttribute("href"),
            scrollTo(".bell_cta", "#oferta", 35)))
}
    ,
    blinkTitle = function () {
        var e = setInterval(function () {
            document.title = "(1) Nova Mensagem",
                setTimeout(function () {
                    document.title = originalPageTitle
                }, 3e3)
        }, 6e3);
        bellButton.addEventListener("click", function () {
            bellButtonIcon.classList.contains("bell_ring") && (bellButtonIcon.classList.remove("bell_ring"),
                document.title = originalPageTitle,
                clearInterval(e))
        })
    }
    ,
    bellButton = document.querySelector(".bell_button"),
    bellButtonIcon = document.querySelector(".bell_button-icon"),
    getTargetClick = document.querySelector("body"),
    bellBox = document.querySelector(".bell_box"),
    getTargetClick.addEventListener("click", function (e) {
        e.target.classList.contains("bell_button") || e.target.classList.contains("bell_button-icon") ? bellBox.classList.toggle("bell_box-active") : bellBox.classList.remove("bell_box-active")
    }),
    bellBox.addEventListener("click", function (e) {
        e.stopPropagation()
    }),
    activateBell = document.getElementById("activateBell"),
    (viewPortBell = window).addEventListener("load", verifyBell),
    viewPortBell.addEventListener("scroll", verifyBell),
    originalPageTitle = document.title);
"use strict";
var marks = document.querySelectorAll("mark")
    , viewportHighlight = window;
function findMark() {
    marks.forEach(function (t) {
        var i = t.getBoundingClientRect().bottom <= .7 * window.innerHeight
            , e = !t.classList.contains("marked");
        i && e && t.setAttribute("class", "marked")
    })
}
viewportHighlight.addEventListener("load", findMark),
    viewportHighlight.addEventListener("scroll", findMark);
"use strict";
var mostraHyperlink, escondeHyperlink, verificaWidthViewport, linkVideoVersion, contentVideoVersion, hyperlinkVideoVersion, textoVideoVersion, viewportWidth;
"" !== copyVideoVersion && (mostraHyperlink = function () {
    textoVideoVersion.classList.add("p-visible"),
        hyperlinkVideoVersion.style.width = "225px"
}
    ,
    escondeHyperlink = function () {
        textoVideoVersion.classList.remove("p-visible"),
            hyperlinkVideoVersion.style.width = "50px"
    }
    ,
    verificaWidthViewport = function () {
        window.innerWidth < 768 ? (hyperlinkVideoVersion.removeEventListener("mouseover", mostraHyperlink),
            hyperlinkVideoVersion.removeEventListener("mouseout", escondeHyperlink),
            mostraHyperlink()) : (hyperlinkVideoVersion.addEventListener("mouseover", mostraHyperlink),
                hyperlinkVideoVersion.addEventListener("mouseout", escondeHyperlink),
                escondeHyperlink())
    }
    ,
    (linkVideoVersion = document.querySelector("a[data-tipoLink=linkVideoVersion]")).setAttribute("href", copyVideoVersion + window.location.search),
    (contentVideoVersion = document.querySelector(".headline_buttonVideoVersion")).style.display = "flex",
    hyperlinkVideoVersion = document.querySelector(".headline_buttonVideoVersion a"),
    textoVideoVersion = document.querySelector(".headline_buttonVideoVersion em"),
    (viewportWidth = window).addEventListener("load", verificaWidthViewport),
    viewportWidth.addEventListener("resize", verificaWidthViewport));
"use strict";
function scrollTo(o, e, t) {
    document.querySelector(o) && document.querySelector(e) && document.querySelector(o).addEventListener("click", function () {
        window.scroll({
            top: document.querySelector(e).getBoundingClientRect().top + window.scrollY - t,
            left: 0,
            behavior: "smooth"
        })
    })
}
scrollTo(".footer_scrollTop-button", "body", 0),
    scrollTo(".scrollDown", ".main_content", 35);
